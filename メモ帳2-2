条件分岐
条件分岐でできることは、Rubyと同じ
ただし、書き方は異なります
⭐️ if

・条件式が1つの場合
if(条件1){
  処理1         条件1を満たすときは、処理1を実行
}

・1つの条件式で、処理を2つに分ける場合
if(条件1){
  処理1         条件1を満たすときは処理1
} else{         満たさないときは処理2を実行
  処理2
}

・2つの条件式で処理を分ける場合
if(条件1){           条件1を満たすときは処理1
  処理1
} else if(条件2){     条件2を満たすときは処理2
  処理2
} else{               どちらも満たさないときは処理3を実行
  処理3
}


繰り返し処理
JavaScriptで繰り返し処理を行うには、
「while文」と「for文」の2つの方法がある。それぞれ役割が異なる。
⭐️ While文は、条件式が真（true）ならば制限なく繰り返します
  for文は、決められた回数だけ繰り返します
  
・while文
while文では、条件式が真（true）である間は繰り返し処理が実行されます。
【while文の記述】

while(条件){           引数の条件がtrueの間
  処理                 波括弧内部の処理が繰り返される
}

・do...while文
while文にはもう1つ、「do...while文」があり
do...while文では、**条件式のtrue／falseに関わらず
最初の1回だけは必ず処理**が行われます。
その後、条件式を評価して、繰り返し処理を続けるか／抜けるかを決めていきます。
【do...while文の記述】

do{                           最低1回は行われる処理が行われた後
  最低1回は行われる処理       （条件）の内容によって
}while(条件);                 trueの場合、最初の「最低1回は行われる処理」が実行され続けるか
(条件falseの場合の処理)       falseの場合、falseの場合の処理が実行される


・for文
「for文」は、**決められた回数の処理を繰り返す**ときに使います
for文を書くときの注意点
・「繰り返す回数」を初期値で設定する
・「条件を満たす場合の処理」を記述する
for文は、決められた回数内で繰り返し処理を行いたい場合に使われます。
【for文の記述】

for ( 初期値; 条件式; 増減値 ){
  繰り返し処理
}
(例)
let i;                 letがついているからiは変数=変数iを宣言
let numm = 0;          「変数numm」を宣言し、初期値を０に設定
                          変数iの初期値を１に設定し、変数iが11未満の時は
for(i = 1; i < 11; i++){  変数iに1を足す('i++'は'i=i+1'と同じ)
    numm = numm + i;      変数nummに「numm + i 」を代入
}

alert('1から10まで足し算した結果は' + numm + 'です');
                        アラートウィンドウに計算結果を表示

