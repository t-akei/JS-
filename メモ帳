【関数とは】
同じプログラムを何度も記述するのは、効率的ではなく、
そんな時に使われるのが「関数」
「関数（function）」は、繰り返し使われる一連の処理を1つにまとめたもの
関数の形で定義しておき、毎回同じプログラムを書く代わりに
この関数を呼び出すことで処理を実行します。(=効率的)

【関数の基本的な書き方】
function 関数名(){
  処理内容
}

functionが関数を定義するキーワードで、関数名は任意でOK
関数名()の()引数も任意で、かつ複数の引数も可能。
書き方は(引数1, 引数2,...)ってかんじで。複数指定すると
それぞれ順番に引数が格納されていく。
{}が関数の中身で、処理内容を記述する。


【引数と戻り値】
入力する値を「**引数（ひきすう）**」
出力される値を「**戻り値（もどりち）**」といいます。
function 関数名(引数){
  処理
  return 戻り値;
}

この関数の結果を出力したいときは
return内に戻り値を渡します。
こうすると、関数の処理結果が
呼び出し元から利用できるようになります


【簡単な関数を記述】
function addString(strA){
// functionでaddStringを関数として定義して、引数にはstrAを定義している
    let addStr = "Hello" + strA;
// letでaddStrを変数として定義し、文字列"Hello"と
// 引数strAの文字列を変数に代入している
    return addStr;
// 結合結果の格納された「addStr」を、関数の戻り値としています。
// returnを記述することで、出力結果が表示されます。
}
// これで与えられた引数を基にして
// 特定の文字列を結合する関数が作成できました